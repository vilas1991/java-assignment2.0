version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - userservice
      - addressservice
      - eurekaserver
    networks:
      springboot-mysql-net: 
  mysqldb:
    container_name: mysqldb
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3310:3306
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      springboot-mysql-net:

  addressservice:
    container_name: addressservice
    build:
      context: ./address-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
      - "9090:9090"
    depends_on:
      - mysqldb
      - eurekaserver
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/addressdb
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    networks:
      springboot-mysql-net:
    restart: on-failure

  eurekaserver:
    container_name: eurekaserver
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      springboot-mysql-net:
    environment:
      SERVER_PORT : "8761"
      PRING_APPLICATION_NAME : eureka-server

  userservice:
    container_name: userservice
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
      - "9091:9091"
    depends_on:
      - mysqldb
      - eurekaserver
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/userdb
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    networks:
        springboot-mysql-net:
    restart: on-failure

networks:
  springboot-mysql-net:
    name: springboot-mysql-net